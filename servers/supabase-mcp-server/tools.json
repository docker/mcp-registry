[
  {
    "name": "search_docs",
    "description": "Searches the Supabase documentation for up-to-date information",
    "arguments": [
      {
        "name": "query",
        "type": "string",
        "desc": "The search query"
      }
    ]
  },
  {
    "name": "list_tables",
    "description": "Lists all tables within the specified schemas",
    "arguments": [
      {
        "name": "schemas",
        "type": "array",
        "desc": "List of schemas to include"
      }
    ]
  },
  {
    "name": "list_extensions",
    "description": "Lists all extensions in the database",
    "arguments": []
  },
  {
    "name": "list_migrations",
    "description": "Lists all migrations in the database",
    "arguments": []
  },
  {
    "name": "apply_migration",
    "description": "Applies a SQL migration to the database",
    "arguments": [
      {
        "name": "name",
        "type": "string",
        "desc": "The name of the migration"
      },
      {
        "name": "query",
        "type": "string",
        "desc": "The SQL query to apply"
      }
    ]
  },
  {
    "name": "execute_sql",
    "description": "Executes raw SQL in the database",
    "arguments": [
      {
        "name": "query",
        "type": "string",
        "desc": "The SQL query to execute"
      }
    ]
  },
  {
    "name": "get_logs",
    "description": "Gets logs for a Supabase project by service type",
    "arguments": [
      {
        "name": "service",
        "type": "string",
        "desc": "The service to fetch logs for (api, postgres, edge-function, auth, storage, realtime)"
      }
    ]
  },
  {
    "name": "get_advisors",
    "description": "Gets a list of advisory notices for the Supabase project",
    "arguments": [
      {
        "name": "type",
        "type": "string",
        "desc": "The type of advisors to fetch (security or performance)"
      }
    ]
  },
  {
    "name": "get_project_url",
    "description": "Gets the API URL for a project",
    "arguments": []
  },
  {
    "name": "get_anon_key",
    "description": "Gets the anonymous API key for a project",
    "arguments": []
  },
  {
    "name": "generate_typescript_types",
    "description": "Generates TypeScript types based on the database schema",
    "arguments": []
  },
  {
    "name": "list_edge_functions",
    "description": "Lists all Edge Functions in a Supabase project",
    "arguments": []
  },
  {
    "name": "get_edge_function",
    "description": "Retrieves file contents for an Edge Function",
    "arguments": [
      {
        "name": "function_slug",
        "type": "string",
        "desc": "The slug of the edge function"
      }
    ]
  },
  {
    "name": "deploy_edge_function",
    "description": "Deploys a new Edge Function to a Supabase project",
    "arguments": [
      {
        "name": "name",
        "type": "string",
        "desc": "The name of the function"
      },
      {
        "name": "files",
        "type": "array",
        "desc": "The files to upload"
      }
    ]
  }
]
