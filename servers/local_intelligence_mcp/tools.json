[
  {
    "name": "text_normalize",
    "description": "Clean and standardize text input by removing extra whitespace, normalizing punctuation, and applying consistent formatting rules",
    "arguments": [
      {
        "name": "text",
        "type": "string",
        "desc": "The text content to normalize and clean"
      },
      {
        "name": "removeFillers",
        "type": "boolean",
        "desc": "Whether to remove filler words and unnecessary content"
      },
      {
        "name": "standardizeFormat",
        "type": "boolean",
        "desc": "Whether to apply standard formatting rules"
      }
    ]
  },
  {
    "name": "text_chunking",
    "description": "Split large text documents into manageable chunks while preserving context and meaning boundaries",
    "arguments": [
      {
        "name": "text",
        "type": "string",
        "desc": "The text content to split into chunks"
      },
      {
        "name": "maxChunkSize",
        "type": "number",
        "desc": "Maximum size of each chunk in characters"
      },
      {
        "name": "overlap",
        "type": "number",
        "desc": "Number of characters to overlap between chunks"
      }
    ]
  },
  {
    "name": "summarization",
    "description": "Generate comprehensive summaries of text content with configurable style and length parameters",
    "arguments": [
      {
        "name": "text",
        "type": "string",
        "desc": "The text content to summarize"
      },
      {
        "name": "style",
        "type": "string",
        "desc": "Summary style: executive, technical, brief, detailed"
      },
      {
        "name": "maxLength",
        "type": "number",
        "desc": "Maximum length of the summary in words"
      }
    ]
  },
  {
    "name": "pii_redaction",
    "description": "Detect and redact personally identifiable information while preserving technical and domain-specific terminology",
    "arguments": [
      {
        "name": "text",
        "type": "string",
        "desc": "The text content to scan for PII"
      },
      {
        "name": "policy",
        "type": "string",
        "desc": "Redaction policy: conservative, balanced, aggressive"
      },
      {
        "name": "preserveAudioTerms",
        "type": "boolean",
        "desc": "Whether to preserve audio and technical terminology"
      }
    ]
  },
  {
    "name": "focused_summarization",
    "description": "Create targeted summaries focusing on specific aspects or topics within the content",
    "arguments": [
      {
        "name": "text",
        "type": "string",
        "desc": "The text content to analyze and summarize"
      },
      {
        "name": "focus",
        "type": "array",
        "desc": "Array of focus areas: key_decisions, action_items, technical_details, etc."
      },
      {
        "name": "analysisDepth",
        "type": "string",
        "desc": "Analysis depth: surface, standard, deep"
      }
    ]
  },
  {
    "name": "content_purpose_detector",
    "description": "Analyze and identify the purpose, intent, and context of text content with comprehensive categorization",
    "arguments": [
      {
        "name": "text",
        "type": "string",
        "desc": "The text content to analyze for purpose and intent"
      },
      {
        "name": "context",
        "type": "object",
        "desc": "Additional context information including domain and analysis preferences"
      }
    ]
  },
  {
    "name": "tag_generation",
    "description": "Extract relevant keywords, topics, and metadata tags from text content with confidence scoring",
    "arguments": [
      {
        "name": "text",
        "type": "string",
        "desc": "The text content to analyze for tag generation"
      },
      {
        "name": "maxTags",
        "type": "number",
        "desc": "Maximum number of tags to generate"
      },
      {
        "name": "includeTechnical",
        "type": "boolean",
        "desc": "Whether to include technical terminology in tags"
      }
    ]
  },
  {
    "name": "schema_extraction",
    "description": "Extract and create structured data schemas from unstructured text content",
    "arguments": [
      {
        "name": "text",
        "type": "string",
        "desc": "The text content to extract structured data from"
      },
      {
        "name": "schemaType",
        "type": "string",
        "desc": "Type of schema to extract: person, event, product, technical_spec"
      },
      {
        "name": "outputFormat",
        "type": "string",
        "desc": "Output format: json, yaml, xml"
      }
    ]
  },
  {
    "name": "health_check",
    "description": "Perform comprehensive health monitoring and system diagnostics with detailed status reporting",
    "arguments": []
  },
  {
    "name": "system_info",
    "description": "Retrieve detailed system information including device capabilities, performance metrics, and configuration details",
    "arguments": [
      {
        "name": "categories",
        "type": "array",
        "desc": "Information categories to retrieve: device, performance, network, capabilities"
      },
      {
        "name": "includeSensitive",
        "type": "boolean",
        "desc": "Whether to include sensitive system information"
      }
    ]
  },
  {
    "name": "capabilities_list",
    "description": "List all available tools, capabilities, and system features with detailed descriptions and usage information",
    "arguments": [
      {
        "name": "category",
        "type": "string",
        "desc": "Filter by capability category: text_processing, analysis, system, extraction"
      },
      {
        "name": "includeExamples",
        "type": "boolean",
        "desc": "Whether to include usage examples for each capability"
      }
    ]
  }
]