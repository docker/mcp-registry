name: ansible-tower
image: knucklessg1/ansible-tower-mcp
type: server
meta:
    category: productivity
    tags:
        - productivity
about:
    title: Ansible Tower MCP Server
    description: |
        The Ansible Tower MCP Server provides a Model Context Protocol (MCP) interface to interact with the Ansible Tower (AWX) API, enabling automation and management of Ansible Tower resources such as inventories, hosts, groups, job templates, projects, credentials, organizations, teams, users, ad hoc commands, workflow templates, workflow jobs, schedules, and system information. This server is designed to integrate seamlessly with AI-driven workflows and can be deployed as a standalone service or used programmatically.Comprehensive API Coverage: Manage Ansible Tower resources including inventories, hosts, groups, job templates, projects, credentials, organizations, teams, users, ad hoc commands, workflows, and schedules.
        MCP Integration: Exposes Ansible Tower API functionalities as MCP tools for use with AI agents or direct API calls.
        Flexible Authentication: Supports both username/password and token-based authentication.
        Environment Variable Support: Securely configure credentials and settings via environment variables.
    icon: https://cdn.jsdelivr.net/gh/homarr-labs/dashboard-icons/png/ansible-light.png
source:
    project: https://github.com/Knuckles-Team/ansible-tower-mcp
config:
    description: Configure the connection to Ansible Tower MCP Server
    env:
        - name: HOST
          example: 0.0.0.0
          value: '{{ansible-tower.host}}'
        - name: PORT
          example: "8000"
          value: '{{ansible-tower.port}}'
        - name: TRANSPORT
          example: http
          value: '{{ansible-tower.transport}}'
        - name: ANSIBLE_INSTANCE
          example: https://awx.com
          value: '{{ansible-tower.ansible_instance}}'
        - name: ANSIBLE_USERNAME
          example: user
          value: '{{ansible-tower.ansible_username}}'
        - name: ANSIBLE_PASSWORD
          example: password
          value: '{{ansible-tower.ansible_password}}'
        - name: ANSIBLE_CLIENT_ID
          example: client_id
          value: '{{ansible-tower.ansible_client_id}}'
        - name: ANSIBLE_CLIENT_SECRET
          example: client_secret
          value: '{{ansible-tower.ansible_client_secret}}'
        - name: ANSIBLE_VERIFY
          example: "true"
          value: '{{ansible-tower.ansible_verify}}'
    parameters:
        type: object
        properties:
            host:
                type: string
            port:
                type: string
            transport:
                type: string
            ansibleinstance:
                type: string
            ansibleusername:
                type: string
            ansiblepassword:
                type: string
            ansibleclientid:
                type: string
            ansibleclientsecret:
                type: string
            ansibleverify:
                type: string
